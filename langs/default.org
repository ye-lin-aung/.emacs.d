#+PROPERTY: header-args :tangle .emacs
* Default configurations for all languages

** Company, Auto complete
#+BEGIN_SRC emacs-lisp  :tangle tangle1.el :eval never
(use-package company
   :ensure t
   :defer t
   :config 
(add-hook 'after-init-hook 'global-company-mode)
)
(use-package auto-complete
   :ensure t
   :defer t
   :config 
(ac-config-default)
)

(use-package company-web
   :ensure t
   :defer t
   :config 
)
(use-package company-inf-ruby
:defer t
:load-path "~/.emacs.d/vendor/company-inf-ruby/"
:config
(eval-after-load 'company)
'(add-to-list 'company-backends 'company-inf-ruby))


#+END_SRC

** Web mode
#+BEGIN_SRC emacs-lisp  :tangle tangle1.el :eval never
(use-package web-mode
:defer t
:ensure t
:config
(add-to-list 'auto-mode-alist '("\\.phtml\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.tpl\\.php\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.[agj]sp\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.as[cp]x\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.erb\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.mustache\\'" . web-mode))
(add-to-list 'auto-mode-alist '("\\.djhtml\\'" . web-mode))
)
#+END_SRC

** Dump Jump
#+BEGIN_SRC emacs-lisp  :tangle tangle1.el :eval never
(use-package dumb-jump
  :defer t
  :bind (("M-g o" . dumb-jump-go-other-window)
         ("M-g j" . dumb-jump-go)
         ("M-g b" . dumb-jump-back)
         ("M-g i" . dumb-jump-go-prompt)
         ("M-g x" . dumb-jump-go-prefer-external)
         ("M-g z" . dumb-jump-go-prefer-external-other-window))
  :config (setq dumb-jump-selector 'ivy) ;; (setq dumb-jump-selector 'helm)
  :ensure)
#+END_SRC
** Vimish-fold
#+BEGIN_SRC emacs-lisp  :tangle tangle1.el :eval never
(use-package vimish-fold
:defer t
:ensure t
:config
(vimish-fold-global-mode 1)
(global-set-key (kbd "C-c v f") #'vimish-fold)
(global-set-key (kbd "C-c v v") #'vimish-fold-delete))
#+END_SRC
** Helm & Dash
#+BEGIN_SRC emacs-lisp  :tangle tangle1.el :eval never
(use-package helm
:defer t
:ensure t)
(use-package helm-dash
:defer t
:ensure t)
#+END_SRC
** Fly Check
#+BEGIN_SRC emacs-lisp  :tangle tangle1.el :eval never
(use-package flycheck
:defer t
  :ensure t
  :init (global-flycheck-mode))
(add-hook 'after-init-hook #'global-flycheck-mode)
#+END_SRC

** Hightlight paranthesis
#+BEGIN_SRC emacs-lisp  :tangle tangle1.el :eval never
(use-package highlight-parentheses
:defer t
:ensure t
:init
(add-hook 'prog-mode-hook 'highlight-parentheses-mode)
)
#+END_SRC
** REST Client
#+BEGIN_SRC emacs-lisp  :tangle tangle1.el :eval never
:defer t
(use-package restclient
:ensure t
:config
(add-to-list 'auto-mode-alist '("\\.http\\'" . restclient-mode))
)
#+END_SRC
** Alchemist
#+BEGIN_SRC emacs-lisp  :tangle tangle1.el :eval never
(use-package elixir-mode
:defer t
:ensure t
)
#+END_SRC
